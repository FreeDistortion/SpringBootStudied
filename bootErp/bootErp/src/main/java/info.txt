<<파일업로드>>
1. 외부경로로 업로드될 파일이 저장되는 위치를 분리
2. 외부경로에서 파일을 다운로드하거나 이미지파일을 볼 수 있도록 WebMvcConfigurer를 등록
   1) WebMvcConfigurer
      => 자동으로 구성된 스프링MVC구성을 변경하지 않고 추가작업을 설정할 수 있도록 지원
      => 메소드를 지원
      => 인터셉터, 뷰리졸버, 메시지컨버터, CORS, .....
      => 정적리소스의 경로를 설정
3. 업로드경로 변경
4. 타임리프에서 외부경로에 저장된 파일을 가져올 수 있도록 설정

<<파일다운로드>>
  - 게시글상세보기에서 업로드된 파일의 정보를 확인
  - 업로드된 파일을 클릭하면 클라이언트PC로 다운로드
  
  1. DB처리
     - 다운로드할 파일의 정보를 가져오기
     - 클릭한 파일의 정보를 가져올 수 있도록 DAO, Service에 메소드를 추가
     - board.xml에 sql추가
     - DAOImpl, ServiceImpl수정
     - Controller를 작성
     
     1) 다운로드 하기 위한 컨트롤러의 요청path를 @PathVariable로 처리
         - DB연동하기
         - @PathVariable로 변경하기
     2) 다운로드 형식으로 response될 수 있도록 처리
        [컨트롤러메소드의 리턴타입]
        - String :view
        - ModelAndView : model과 view의 정보
        - DTO, List<DTO> : json
        - ResponseEntity : 응답의 데이터를 관리하는 객체 
                           Http응답헤더,Http응답바디, Http응답의 상태정보.....
                           HttpEntity객체의 하위
                          -------------
                             |
                             |__  요청헤더, 요청바디, 응답헤더, 응답바디등을 관리하는 객체
       
       [파일다운로드에서 필요한 객체]
       - UrlResource : 스프링내부에서 파일객체를 다루기 위한 객체                      
      
<<클라이언트에 전송>>
1) SSR(서버사이드랜더링)
   - 동적으로  view를 작성해서 클라이언트에 전달
   - 어떤 사용자가 어떤 상황에서 작업을 하냐에 따라 뷰가 달라질 수 있다.(DB에서 조회한 데이터로 결과를 만들어서 전송)
   - JSP, 타임리프
   
2) CSR(클라이언트사이드랜더링)
   - DBMS에서 조회한 결과를 데이터만 클라이언트로 전송
   - 자바스크립트에서 전달받은 데이터를 필요한 부분에 출력될 수 있도록 작업
     ----------------
         DOM을 이용(jQuery)
   - 데이터가 JSON으로 주로 전달
   - 웹클라이언트 -> WAS요청
   - 스마트폰 -> WAS요청
   - WAS -> WAS로 요청
   - React, Vue.js
   
3) CSR을 위해 필요한 기술
   - JSON(주로 전달되는 데이터 형식)
   - 자바스크립트에서 JSON데이터를 접근하는 방법
   - Ajax(서버에서 데이터를 요청하기 위해서 사용되는 자바스크립트 기술)
   - 스프링에서 Ajax로 요청받아서 JSON데이터를 만들어서 response방법
   - 자바스크립트(jQuery)에서 response받은 JSON데이터를 DOM을 이용해서 원하는 위치에 디자인         
     
<<Ajax요청하기>>
  - Asynchronous Javascript and XML
  - 자바스크립트로 비동기통신을 요청
  - XMLHttpRequest객체가 비동기통신을 담당
  
  1. jQuery로 Ajax요청하기
     1) ajax()를 이용해서 처리하기 
    	 - $.ajax()를 이용해서 ajax통신하기
    	 - jQuery의 메소드를 호출하면서 작업하는 모든 매개변수는  JSON형식으로 정의
     	
     	[매개변수]
     	url : ajax로 요청할 컨트롤러의 요청 path
     	type : 요청방식(get or post)
     	data : 서버로 전송할 데이터(파라미터)
     	      => 서버로 보내서 처리할 데이터가 여러 개이면 json으로 정의해서 넘기기
     	datatype : ajax결과에 대한 타입 - text,json
     	success : 서버와 통신이 성공했을때 호출되는 함수
     	       서버가 통신이 성공하면 결과를 보내주고 브라우저 내부의 라이브러리에서 자동으로 결과를 받아서
     	       success에 정의된 함수를 호출하면서 매개변수로 결과를 보내준다.
     	       
     	error: 서버와 통신이 실패했을때 호출되는 함수
     	                 
          
     
     
     
     
     
     
     
     
     
     
     
     
     